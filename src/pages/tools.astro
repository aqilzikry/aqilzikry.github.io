---
import MetaHead from '@components/general/MetaHead.astro';
import BudgetCalculator from '@components/tools/BudgetCalculator.astro';
import ColorConverter from '@components/tools/ColorConverter.astro';
import JsonXmlValidator from '@components/tools/JsonXmlValidator.astro';
import Layout from '@layouts/Layout.astro';
---

<!doctype html>
<html lang='en'>
  <head>
    <MetaHead title={'Tools'} description={'Checkout these tools I made.'} ogImageUrl={'/assets/images/profile.png'} />
  </head>

  <body>
    <Layout>
      <h1 style='line-height: 1.2;' transition:animate='slide'>Tools</h1>
      <p class='dark:text-light text-lg mb-8'>A collection of useful tools I've used often.</p>

      <!-- Tab Navigation -->
      <div class='mb-8'>
        <nav class='w-fit space-x-1 bg-slate-100 dark:bg-dark-gray rounded-lg p-1' role='tablist'>
          <button
            id='tab-development'
            class='tab-button px-4 py-2 text-sm font-medium rounded-md transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500'
            role='tab'
            aria-selected='true'
            aria-controls='panel-development'
            data-tab='development'
          >
            <span class='flex items-center justify-center gap-2'>
              <svg class='w-4 h-4' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
                <path
                  stroke-linecap='round'
                  stroke-linejoin='round'
                  stroke-width='2'
                  d='M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4'></path>
              </svg>
              Development
            </span>
          </button>
          <button
            id='tab-productivity'
            class='tab-button px-4 py-2 text-sm font-medium rounded-md transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500'
            role='tab'
            aria-selected='false'
            aria-controls='panel-productivity'
            data-tab='productivity'
          >
            <span class='flex items-center justify-center gap-2'>
              <svg class='w-4 h-4' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
                <path
                  stroke-linecap='round'
                  stroke-linejoin='round'
                  stroke-width='2'
                  d='M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z'
                ></path>
              </svg>
              Productivity
            </span>
          </button>
        </nav>
      </div>

      <!-- Tab Panels -->
      <div class='tab-content'>
        <!-- Development Tools Panel -->
        <div id='panel-development' class='tab-panel' role='tabpanel' aria-labelledby='tab-development'>
          <!-- Development Tools Pills -->
          <div class='mb-6'>
            <nav class='flex flex-wrap gap-2' role='tablist'>
              <button class='pill-button active' data-tool='color-converter' data-category='development'>
                <span class='flex items-center gap-2'> Color Converter </span>
              </button>
              <button class='pill-button' data-tool='json-xml-validator' data-category='development'>
                <span class='flex items-center gap-2'> JSON & XML Validator </span>
              </button>
            </nav>
          </div>

          <!-- Development Tools Content -->
          <div class='tool-content'>
            <!-- Color Converter Tool -->
            <div id='tool-color-converter' class='tool-panel' data-category='development'>
              <div
                class='bg-white dark:bg-dark-gray p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200 max-w-2xl'
              >
                <div class='flex items-center gap-3 mb-4'>
                  <div class='p-2 bg-blue-100 dark:bg-blue-900 rounded-lg'>
                    <svg
                      class='w-5 h-5 text-blue-600 dark:text-blue-400'
                      fill='none'
                      stroke='currentColor'
                      viewBox='0 0 24 24'
                    >
                      <path
                        stroke-linecap='round'
                        stroke-linejoin='round'
                        stroke-width='2'
                        d='M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zM21 5a2 2 0 00-2-2h-4a2 2 0 00-2 2v12a4 4 0 004 4h4a2 2 0 002-2V5z'
                      ></path>
                    </svg>
                  </div>
                  <div>
                    <h2 class='text-2xl font-outfit text-dark dark:text-light'>Color Converter</h2>
                    <p class='text-gray-600 dark:text-gray-400 text-sm'>
                      Convert colors between different formats (HEX, RGB, HSL).
                    </p>
                  </div>
                </div>
                <ColorConverter />
              </div>
            </div>

            <!-- JSON & XML Validator Tool -->
            <div id='tool-json-xml-validator' class='tool-panel hidden' data-category='development'>
              <div
                class='bg-white dark:bg-dark-gray p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200'
              >
                <div class='flex items-center gap-3 mb-4'>
                  <div class='p-2 bg-green-100 dark:bg-green-900 rounded-lg'>
                    <svg
                      class='w-5 h-5 text-green-600 dark:text-green-400'
                      fill='none'
                      stroke='currentColor'
                      viewBox='0 0 24 24'
                    >
                      <path
                        stroke-linecap='round'
                        stroke-linejoin='round'
                        stroke-width='2'
                        d='M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z'
                      ></path>
                    </svg>
                  </div>
                  <div>
                    <h2 class='text-2xl font-outfit text-dark dark:text-light'>JSON & XML Validator</h2>
                    <p class='text-gray-600 dark:text-gray-400 text-sm'>
                      Validate and format JSON and XML data with syntax highlighting.
                    </p>
                  </div>
                </div>
                <JsonXmlValidator />
              </div>
            </div>
          </div>
        </div>

        <!-- Productivity Tools Panel -->
        <div id='panel-productivity' class='tab-panel hidden' role='tabpanel' aria-labelledby='tab-productivity'>
          <!-- Productivity Tools Pills -->
          <div class='mb-6'>
            <nav class='flex flex-wrap gap-2' role='tablist'>
              <button class='pill-button active' data-tool='budget-calculator' data-category='productivity'>
                <span class='flex items-center gap-2'>
                  <div class='w-3 h-3 bg-purple-500 rounded-full'></div>
                  50/30/20 Budget Calculator
                </span>
              </button>
            </nav>
          </div>

          <!-- Productivity Tools Content -->
          <div class='tool-content'>
            <!-- Budget Calculator Tool -->
            <div id='tool-budget-calculator' class='tool-panel' data-category='productivity'>
              <div
                class='bg-white dark:bg-dark-gray p-6 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200 max-w-2xl'
              >
                <div class='flex items-center gap-3 mb-4'>
                  <div class='p-2 bg-purple-100 dark:bg-purple-900 rounded-lg'>
                    <svg
                      class='w-5 h-5 text-purple-600 dark:text-purple-400'
                      fill='none'
                      stroke='currentColor'
                      viewBox='0 0 24 24'
                    >
                      <path
                        stroke-linecap='round'
                        stroke-linejoin='round'
                        stroke-width='2'
                        d='M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z'
                      ></path>
                    </svg>
                  </div>
                  <div>
                    <h2 class='text-2xl font-outfit text-dark dark:text-light'>50/30/20 Budget Calculator</h2>
                    <p class='text-gray-600 dark:text-gray-400 text-sm'>
                      Calculate budget allocation using the popular 50/30/20 budgeting rule.
                    </p>
                  </div>
                </div>
                <BudgetCalculator />
              </div>
            </div>
          </div>
        </div>
      </div>
    </Layout>

    <style>
      .tab-button {
        @apply text-gray-600 dark:text-gray-400;
      }

      .tab-button.active {
        @apply bg-white dark:bg-gray-700 text-blue-600 dark:text-blue-400 shadow-sm;
      }

      .tab-button:not(.active):hover {
        @apply text-gray-900 dark:text-gray-200 bg-gray-50 dark:bg-gray-700;
      }

      .pill-button {
        @apply px-4 py-2 text-sm font-medium rounded-full 
               text-gray-600 dark:text-gray-400 bg-slate-100 dark:bg-dark-gray 
               hover:bg-gray-50 dark:hover:bg-gray-700 hover:text-gray-900 dark:hover:text-gray-200
               transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500;
      }

      .pill-button.active {
        @apply bg-blue-600 dark:bg-blue-500 text-white border-blue-600 dark:border-blue-500 
               hover:bg-blue-700 dark:hover:bg-blue-600;
      }

      .tab-panel {
        animation: fadeIn 0.3s ease-in-out;
      }

      .tool-panel {
        animation: slideIn 0.3s ease-in-out;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @keyframes slideIn {
        from {
          opacity: 0;
          transform: translateX(-20px);
        }
        to {
          opacity: 1;
          transform: translateX(0);
        }
      }
    </style>

    <script is:inline>
      document.addEventListener('astro:page-load', () => {
        // Initialize tab functionality
        const tabButtons = document.querySelectorAll('.tab-button');
        const tabPanels = document.querySelectorAll('.tab-panel');
        const pillButtons = document.querySelectorAll('.pill-button');
        const toolPanels = document.querySelectorAll('.tool-panel');

        // Set initial active state
        const activeTab = document.querySelector('[data-tab="development"]');
        if (activeTab) {
          activeTab.classList.add('active');
        }

        // Tab functionality
        tabButtons.forEach((button) => {
          button.addEventListener('click', () => {
            const targetTab = button.getAttribute('data-tab');
            const targetPanel = document.getElementById(`panel-${targetTab}`);

            // Remove active class from all buttons and hide all panels
            tabButtons.forEach((btn) => {
              btn.classList.remove('active');
              btn.setAttribute('aria-selected', 'false');
            });

            tabPanels.forEach((panel) => {
              panel.classList.add('hidden');
            });

            // Add active class to clicked button and show target panel
            button.classList.add('active');
            button.setAttribute('aria-selected', 'true');
            targetPanel.classList.remove('hidden');

            // Show first tool in the category
            showFirstToolInCategory(targetTab);
          });
        });

        // Pill button functionality
        pillButtons.forEach((button) => {
          button.addEventListener('click', () => {
            const targetTool = button.getAttribute('data-tool');
            const category = button.getAttribute('data-category');

            // Remove active class from all pill buttons in the same category
            const categoryPills = document.querySelectorAll(`[data-category="${category}"].pill-button`);
            categoryPills.forEach((pill) => {
              pill.classList.remove('active');
            });

            // Hide all tools in the same category
            const categoryTools = document.querySelectorAll(`[data-category="${category}"].tool-panel`);
            categoryTools.forEach((tool) => {
              tool.classList.add('hidden');
            });

            // Add active class to clicked pill and show target tool
            button.classList.add('active');
            const targetToolPanel = document.getElementById(`tool-${targetTool}`);
            if (targetToolPanel) {
              targetToolPanel.classList.remove('hidden');
            }
          });
        });

        // Function to show first tool in category
        function showFirstToolInCategory(category) {
          const firstPill = document.querySelector(`[data-category="${category}"].pill-button`);
          if (firstPill) {
            // Remove active from all pills in category
            const categoryPills = document.querySelectorAll(`[data-category="${category}"].pill-button`);
            categoryPills.forEach((pill) => {
              pill.classList.remove('active');
            });

            // Hide all tools in category
            const categoryTools = document.querySelectorAll(`[data-category="${category}"].tool-panel`);
            categoryTools.forEach((tool) => {
              tool.classList.add('hidden');
            });

            // Activate first pill and show first tool
            firstPill.classList.add('active');
            const firstToolId = firstPill.getAttribute('data-tool');
            const firstTool = document.getElementById(`tool-${firstToolId}`);
            if (firstTool) {
              firstTool.classList.remove('hidden');
            }
          }
        }

        // Keyboard navigation for tabs
        tabButtons.forEach((button, index) => {
          button.addEventListener('keydown', (e) => {
            if (e.key === 'ArrowRight' || e.key === 'ArrowLeft') {
              e.preventDefault();
              const nextIndex =
                e.key === 'ArrowRight'
                  ? (index + 1) % tabButtons.length
                  : (index - 1 + tabButtons.length) % tabButtons.length;

              tabButtons[nextIndex].focus();
              tabButtons[nextIndex].click();
            }
          });
        });

        // Initialize with first tool visible
        showFirstToolInCategory('development');
      });
    </script>
  </body>
</html>
